global proc processing(){

	ctxCompletion;
	EPCurveTool;

	global string $curves[];

	$curves = `ls "curveShape*"`;
	int $len = size($curves);
	print "number of curves: ";
    print $len;

	int $mode = $len%3;

	if($len!=0 && $mode == 0){
	
		string $cmd = "ThreeSweepCmd -ncv " + $len + " ";
		int $nSample = `getAttr "ThreeSweepNode1.nSamplePoints"`;
		string $pointsCmd = getSamplePoints("curve"+$len, $nSample);
		$cmd += $pointsCmd;
		print $cmd;
		eval($cmd);
	
	}else if($mode!=0){

		string $cmd = "ThreeSweepCmd -ncv " + $len + " ";
		int $nSample = 2;
		string $pointsCmd = getSamplePoints("curve"+$len, $nSample);
		$cmd += $pointsCmd;
		print $cmd;
		eval($cmd);

	}
}

global proc string getSamplePoints(string $name, int $nSample){
	string $pointsCmd = "";
	float $step = 1.0 / ($nSample-1);
	float $pctParam = 0;

	for($i = 0; $i<$nSample; $i++){

		float $curPoint[];
		$getPointCmd = "pointOnCurve -top true -pr " + $pctParam + " " + $name;
		$curPoint = eval($getPointCmd);
		$curX = $curPoint[0];
		$curY = $curPoint[1];
		$curZ = $curPoint[2];

		$pointsCmd += "-p " +$curX + " "+ $curY + " " + $curZ + " ";

		$pctParam += $step;
		}

	return $pointsCmd;
}


if (`runTimeCommand -exists process`){
	runTimeCommand -e -del process;
}

runTimeCommand
	-annotation "process"
	-commandLanguage "mel"
	-command "processing()"
	process;
	
nameCommand -ann "processNameCommand" -command ("process") processNameCommand;

hotkey -k "Shift+Return" -name "processNameCommand";

