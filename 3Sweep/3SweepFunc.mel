global proc processing(string $geometryName, string $curveName){

	EPCurveTool;

	global string $curves[];
	global string $nSamplePoints;
	global int $index;

	$array = stringToStringArray($curveName, "curve");
	$mode = $array[size($array)-1];//123

	if($mode == 3){
	
		string $cmd = "ThreeSweepCmd -gn " + $geometryName + " -m " + $mode + " ";
		int $nSample = `intSliderGrp -q -v $nSamplePoints`;
		string $pointsCmd = getSamplePoints($curveName, $nSample);
		$cmd += $pointsCmd;
		print $cmd;
		eval($cmd);
	
	}else if($mode!=3){

		string $cmd = "ThreeSweepCmd -gn " + $geometryName + " -m " + $mode + " ";
		int $nSample = 2;
		string $pointsCmd = getSamplePoints($curveName, $nSample);
		$cmd += $pointsCmd;
		print $cmd;
		eval($cmd);

	}
}

global proc processingSelected(){
	global int $index;
	string $array[] = `ls -sl`;
	$geometryName = "Geometry" + $index;
	$curveName = $array[0];
	processing($geometryName, $curveName);
	if($curveName == "curve3"){
		$index ++;
	}
}

global proc string getSamplePoints(string $name, int $nSample){
	string $pointsCmd = "";
	float $step = 1.0 / ($nSample-1);
	float $pctParam = 0;

	for($i = 0; $i<$nSample; $i++){

		float $curPoint[];
		$getPointCmd = "pointOnCurve -top true -pr " + $pctParam + " " + $name;
		$curPoint = eval($getPointCmd);
		$curX = $curPoint[0];
		$curY = $curPoint[1];
		$curZ = $curPoint[2];

		$pointsCmd += "-p " +$curX + " "+ $curY + " " + $curZ + " ";

		$pctParam += $step;
		}

	return $pointsCmd;
}

global proc selectAll(){
	string $array[] = `ls -sl`;
	if(size($array)<1){
		error "Must select geometry before!";
	}

	for ($item in $array)
	{
		string $geometryName = $item;
		if(startsWith($geometryName, "Geometry")){
		    print ("Selected: " + $geometryName);
			string $all = $geometryName+"*";
			select -add $all;
		}else{
		    error "Not 3 Sweep Geometry, can not modify!";
		}
	}
}

global proc finalize(){
	string $array[] = `ls -sl`;
	if(size($array)<1){
		error "Must select geometry before!";
	}

	for ($item in $array)
	{
		string $geometryName = $item;
		if(startsWith($geometryName, "Geometry")){
		    print ("Finalized: " + $geometryName);
			delete -ch $geometryName;
			$profiles = $geometryName + "Circle*";
			delete $profiles;
			$curves = $geometryName + "curve*";
			delete $curves;
		}else{
		    error "Not 3 Sweep Geometry, can not modify!";
		}
	}
}

global proc modify(){
	string $array[] = `ls -sl`;

	if(size($array)<1){
		error "Must select Geometry!";
	}
	
	for ($item in $array)
	{
		string $geometryName = $item;
		if(startsWith($geometryName, "Geometry")){
		    print ("Modifying: " + $geometryName);
			delete $geometryName;
			$circleSet = $geometryName + "Circle*";
			delete $circleSet;
			processing($geometryName, $geometryName + "curve1");
			processing($geometryName, $geometryName + "curve2");
			processing($geometryName, $geometryName + "curve3");
		}else{
		    error "Not 3 Sweep Geometry, can not modify!";
		}
	}
}

if (`runTimeCommand -exists process`){
	runTimeCommand -e -del process;
}

runTimeCommand
	-annotation "process"
	-commandLanguage "mel"
	-command "ctxCompletion;processingSelected()"
	process;
	
nameCommand -ann "processNameCommand" -command ("process") processNameCommand;

hotkey -k "Shift+Return" -name "processNameCommand";

